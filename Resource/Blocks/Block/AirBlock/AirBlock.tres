[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.239216, 0.537255, 1, 0.0392157 )

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Color:3
	vec3 n_out3p0;
	float n_out3p1;
	n_out3p0 = vec3(0.239216,0.537255,1.000000);
	n_out3p1 = 0.039216;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = n_out3p1;

}

void light() {
// Output:0

}
"
nodes/fragment/0/position = Vector2( 480, 100 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( 140, 100 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 3, 1, 0, 1 )

[resource]
shader = SubResource( 2 )

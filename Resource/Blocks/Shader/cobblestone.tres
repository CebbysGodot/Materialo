[gd_resource type="VisualShader" load_steps=2 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "block_texture"

[resource]
code = "shader_type spatial;
uniform sampler2D block_texture;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(block_texture, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, -75 )
nodes/fragment/0/position = Vector2( 580, 60 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 280, -20 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1 )

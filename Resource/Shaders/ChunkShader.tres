[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "texture_size"

[sub_resource type="VisualShaderNodeVectorFunc" id=2]
function = 19

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 3

[sub_resource type="VisualShaderNodeScalarUniform" id=4]
uniform_name = "atlas_size"

[sub_resource type="VisualShaderNodeVectorCompose" id=5]

[sub_resource type="VisualShaderNodeVectorOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=7]
uniform_name = "chunk_texture"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=10]

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass;

uniform float texture_size;
uniform float atlas_size;
uniform sampler2D chunk_texture;



void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// ScalarUniform:10
	float n_out10p0 = texture_size;

// VectorCompose:9
	float n_in9p2 = 0.00000;
	vec3 n_out9p0 = vec3(n_out10p0, n_out10p0, n_in9p2);

// ScalarUniform:16
	float n_out16p0 = atlas_size;

// VectorCompose:17
	float n_in17p2 = 0.00000;
	vec3 n_out17p0 = vec3(n_out16p0, n_out16p0, n_in17p2);

// VectorOp:18
	vec3 n_out18p0 = n_out9p0 * n_out17p0;

// VectorOp:7
	vec3 n_out7p0 = n_out5p0 * n_out18p0;

// VectorFunc:14
	vec3 n_out14p0 = floor(n_out7p0);

// VectorOp:15
	vec3 n_out15p0 = n_out14p0 / n_out18p0;

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(chunk_texture, n_out15p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -705.309, -75 )
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 400, 100 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( 120, 40 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( -620, 20 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( -360, 20 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( -520, 200 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -700, 200 )
nodes/fragment/14/node = SubResource( 2 )
nodes/fragment/14/position = Vector2( -180, 20 )
nodes/fragment/15/node = SubResource( 3 )
nodes/fragment/15/position = Vector2( -100, 120 )
nodes/fragment/16/node = SubResource( 4 )
nodes/fragment/16/position = Vector2( -700, 320 )
nodes/fragment/17/node = SubResource( 5 )
nodes/fragment/17/position = Vector2( -520, 320 )
nodes/fragment/18/node = SubResource( 6 )
nodes/fragment/18/position = Vector2( -340, 200 )
nodes/fragment/connections = PoolIntArray( 10, 0, 9, 0, 10, 0, 9, 1, 7, 0, 14, 0, 14, 0, 15, 0, 15, 0, 2, 0, 16, 0, 17, 1, 16, 0, 17, 0, 9, 0, 18, 0, 17, 0, 18, 1, 18, 0, 7, 1, 18, 0, 15, 1, 2, 0, 0, 0, 2, 1, 0, 1, 5, 0, 7, 0 )
